import telebot
import json
from telebot import types 
import time 
import random
from file_utils import get_file_json



bot = telebot.TeleBot('6170027400:AAHqHQ08cQiSD4fD4MkVzlqXMc-VIPXBIoQ')
_data = get_file_json("data.json")
mapping = {}


def init_user(message):
    chat_id = message.chat.id
    start_id = message.id

    user = {
        "key": 1,
        "result": 0,
        "start_id": start_id
    }

    if f"{chat_id}" in mapping:
        user["start_id"] = mapping[f"{chat_id}"]["start_id"]
    
    mapping[f"{chat_id}"] = user
    

@bot.message_handler(commands= ['start'])
def start(message):
    init_user(message)

    chat_id = message.chat.id 
    # if f"{chat_id}" not in mapping["start_id"]:
    #     mapping['start_id'].update({f"{chat_id}": start_id})



    text1 = """
    –ü—Ä–∏–≤–µ—Ç! üëÄ\n–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–π—Ç–∏ –∫ —Ç–µ—Ä–∞–ø–µ–≤—Ç—É, –∞ –º–æ–∂–µ—Ç–µ —Å—Ç–∞–≤–∏—Ç—å —Å–µ–±–µ –¥–∏–∞–≥–Ω–æ–∑—ã —Å–∞–º–∏ —Å –ø–æ–º–æ—â—å—é —Ç–µ–ª–µ–≥—Ä–∞–º–º-–±–æ—Ç–æ–≤, —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –Ω–µ–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∞–º–∏!
    """

    markup = types.InlineKeyboardMarkup()
    mar1 = types.InlineKeyboardButton("–°—Ç–∞–≤–∏—Ç—å —Å–µ–±–µ –¥–∏–∞–≥–Ω–æ–∑ ü•∏", callback_data="explanation")
    mar2 = types.InlineKeyboardButton("–û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç—É üåö", callback_data="fack_you")
    markup.row(mar1, mar2)
    bot.send_message(chat_id,  f'{text1}', reply_markup=markup)

@bot.callback_query_handler(func= lambda call: True)
def callback(call):
    chat_id = call.message.chat.id
    global mapping
    key = mapping[f"{chat_id}"]["key"]
    start_id = mapping[f"{chat_id}"]["start_id"]


    if call.data == "explanation":
        text2 = \
"""*–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—á—Ç–∏—Ç–µ –≥—Ä—É–ø–ø—ã —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –Ω–∏–∂–µüßê*
–í –∫–∞–∂–¥–æ–π –∏–∑ –Ω–∏—Ö –æ—Ç–º–µ—Ç—å—Ç–µ —Ç–æ—Ç –ø—É–Ω–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–ª–Ω–æ –æ—Ç—Ä–∞–∂–∞–µ—Ç –≤–∞—à–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–µ *–¥–≤–µ –Ω–µ–¥–µ–ª–∏*, –≤–∫–ª—é—á–∞—è —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å.
–ï—Å–ª–∏ –≤ –∫–∞–∫–æ–π-—Ç–æ –∏–∑ –≥—Ä—É–ø–ø –≤–∞–º —Å–ª–æ–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å—Å—è –º–µ–∂–¥—É –¥–≤—É–º—è-—Ç—Ä–µ–º—è –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏, –≤—ã–±–∏—Ä–∞–π—Ç–µ –±–æ–ª–µ–µ –ø–µ—á–∞–ª—å–Ω—ã–π!
–í—ã –≥–æ—Ç–æ–≤—ã?"""

        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("–ü–†–û–î–û–õ–ñ–ò–¢–¨", callback_data="start_test"))

        bot.send_photo(chat_id,  photo=open('have_a_drink.jpeg', 'rb'))
        time.sleep(1)
        bot.send_message(chat_id,  f'{text2}', reply_markup=markup, parse_mode="Markdown")

    elif call.data == "fack_you":
        chat_id = call.message.chat.id
        message_id = call.message.id 

        i = 0
        while message_id - i != start_id:
            bot.delete_message(chat_id, message_id - i)
            i += 1

        bot.delete_message(chat_id, start_id)
        
        del mapping[f"{chat_id}"]["start_id"]


        bot.send_message(chat_id, "–ù—É –∏ –∏–¥–∏ –Ω–∞—Ö—É–π!")

    
        
    elif call.data == "start_test":
        bot.send_message(chat_id, "–ü—Ä–∏—Å—Ç—É–ø–∞–µ–º!")
        get_questions(call.message, 1)
        
    else:
        calldata = json.loads(call.data)
        num_quest = int(calldata["num_quest"])
        command = int(calldata["command"])

        if num_quest == key and  num_quest < 21:

            var_answers = [
                ["–û—Ç–ª–∏—á–Ω–æ! üíÖ", "–ô–æ—É-–π–æ—É, –∫—Ä—É—Ç–æ!", "–ù–µ–ø–ª–æ—Ö–æ! ü§î", "–£ —Ç–µ–±—è –Ω–µ –≤—Å–µ –ø–æ—Ç–µ—Ä—è–Ω–æ!"],
                ["–û—É üò¶", "–ù–µ –ø–æ–≤–µ–∑–ª–æ —Ç–µ–±–µ!", "–°–ª–µ–≥–∫–∞ –ø—Ä–µ—Å–∫–æ—Ä–±–Ω–æ ü§ß", "–£ —Ç–µ–±—è —Å–ª–æ–∂–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è"],
                ["–£–¥–∏–≤–ª—è–µ—à—å!", "–ü–µ—á–∞–ª—å–Ω–æ üòì", "–¢—ã –∫–æ–Ω–µ—á–Ω–æ –¥–∞–µ—à—å üò±", "–ñ—É—Ç—å ü´¢" ],
                ["–û —É–∂–∞—Å! üòñ", "–í—Ä–∞–≥—É –Ω–µ –ø–æ–∂–µ–ª–∞–µ—à—å! üòü", "–¢–≤–æ—è –∂–∏–∑–Ω—å - –∫ –¥–µ–Ω—å–≥–∞–º –ø—Å–∏—Ö–æ–ª–æ–≥—É üí∏", "–ñ–∞–ª—å —ç—Ç–æ–≥–æ –¥–æ–±—Ä—è–∫–∞ üò¨"],
                ["–° —ç—Ç–∏–º —è–≤–Ω—ã–π –¥–∏—Å–±–∞–ª–∞–Ω—Å üò≥", "–¢—É—Ç –∑–Ω–∞—Ç—å –±—ã –Ω–æ—Ä–º—É!üò¨", "–ü–µ—Ä–µ–±–æ—Ä! ü´£", "–ù–µ –º–∞–ª–æ–≤–∞—Ç–æ? üò¨"]
            ]


            which_list = command if key not in [15, 20] else 4



        

            bot.send_message(chat_id, var_answers[which_list][random.randint(0, 3)])
            get_questions(call.message, (num_quest + 1))

            mapping[f"{chat_id}"]["result"] += command
            mapping[f"{chat_id}"]["key"] += 1
        else: 
            mapping[f"{chat_id}"]["result"] += command
            results(chat_id)


def get_questions(message, num_quest):
    global _data
    titles =  _data["titles"]
    chat_id = message.chat.id
    markup = make_markup(num_quest)
    text = make_text(num_quest)

    time.sleep(1)
    bot.send_message(chat_id, f"üåø{num_quest}/21 *{titles[num_quest - 1]}*\n{text}", reply_markup=markup, parse_mode="Markdown")

def make_markup(num_questions):
    markup = types.InlineKeyboardMarkup()
    buttons = []

    for i in range(1, 5)  :
        make_btn = types.InlineKeyboardButton
        smiles = ['üòÉ', 'üò≥', 'üòû', 'üò´']

        calldata_json = json.dumps({"num_quest": f'{num_questions}', "command": f'{i - 1}' })
        buttons.append(make_btn(f'{i}{smiles[i - 1]}', callback_data = calldata_json))
    markup.row(*buttons)


    return markup

def make_text(num_quest):
    global _data
    text = []
    access_list = _data["questions"][f"{num_quest}" ]

    for i in range(4):
        text.append(f'{i + 1}.{access_list[i]}')
    text = '\n'.join(text)
    return text

def results(chat_id):
    global mapping
    result = mapping[f"{chat_id}"]["result"]
    

    if  result <= 13:
        i = 0
    elif result in range(14, 20):
        i = 1
    elif result in (21, 29):
        i = 2
    else:
        i = 3

    smiles = ['üòã', 'üòí', 'üòñ', 'üò≠']
    var_answers = [
            "–£ –≤–∞—Å –Ω–µ—Ç –¥–µ–ø—Ä–µ—Å—Å–∏–∏, –Ω–µ —Ç—Ä–∞—Ç—å—Ç–µ –≤—Ä–µ–º—è –Ω–∞ –∏–ø–æ—Ö–æ–Ω–¥—Ä–∏—é! (0‚Äì13)",
            "–í–µ—Ä–æ—è—Ç–Ω–∞ –ª—ë–≥–∫–∞—è –¥–µ–ø—Ä–µ—Å—Å–∏—è (—Å—É–±–¥–µ–ø—Ä–µ—Å—Å–∏—è) 14‚Äì19 ",
            "–í–µ—Ä–æ—è—Ç–Ω–∞ —É–º–µ—Ä–µ–Ω–Ω–∞—è –¥–µ–ø—Ä–µ—Å—Å–∏—è! –ü–æ—Ä–∞ –ø–∏—Ç—å —Ç–∞–±–ª–µ—Ç–∫–∏ (20‚Äì28)",
            "–ó–æ–≤–∏—Ç–µ –Ω–∞ –ø–æ–º–æ—â—å, —É –≤–∞—Å —Ç—è–∂—ë–ª–∞—è –¥–µ–ø—Ä–µ—Å—Å–∏—è. –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–µ–º —Å–ª–æ–∂–Ω–µ–µ, —á–µ–º –±–æ–ª—å—à–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤ (29‚Äì63)"

    ]
    bot.send_message(chat_id, f"–í–∞—à —Ä–µ—É–∑–ª—å—Ç–∞—Ç —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç {result} {smiles[i]}\n{var_answers[i]}.")





if __name__ == "__main__":
    bot.polling(non_stop=True)

